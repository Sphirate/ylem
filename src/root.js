import { SymbolDispatch } from './symbols';
import { isReducer, isAction } from './helpers';

export const createStore = (reducer) => {
    if (!isReducer(reducer)) {
        throw new Error('Reducer must be generated by `createReducer` or `combineReducer` functions');
    }

    let isDispatching = false;
    const dispatch = (...actions) => {
        if (!actions.length) {
            return;
        }
        if (!actions.every(isAction)) {
            throw new Error('Illegal action format');
        } 
        if (isDispatching) {
            throw new Error('Reducers may not dispatch actions.');
        }

        try {
            isDispatching = true;
            reducer[SymbolDispatch](...actions)
                .forEach(fn => fn());
        } finally {
            isDispatching = false;
        }
    }

    return {
        dispatch,
        subscribe: reducer.subscribe,
        getState: reducer.getState,
    };
};
